{"version":3,"sources":["components/repodetails.js","components/repogroup.js","components/repolist.js","App.js","reportWebVitals.js","index.js"],"names":["RepoDetails","props","react_default","a","createElement","href","data","url","name","description","Date","lastupdate","toLocaleDateString","RepoGroup","console","log","border","repos","map","item","i","key","groups","RepoList","_useState","useState","_useState2","Object","slicedToArray","Groups","setGroups","useEffect","Octokit","rest","listForOrg","org","type","then","_ref","filter","repo","toLowerCase","startsWith","reduce","r","v","grpName","split","repoData","html_url","pushed_at","id","grp","find","push","length","App","className","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"8OAEe,SAASA,EAAYC,GAChC,OACIC,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGC,KAAMJ,EAAMK,KAAKC,KAAMN,EAAMK,KAAKE,OAAcN,EAAAC,EAAAC,cAAA,UAAKH,EAAMK,KAAKG,aAAiBP,EAAAC,EAAAC,cAAA,UAAM,IAAIM,KAAKT,EAAMK,KAAKK,YAAaC,uBCC5H,SAASC,EAAUZ,GAE9B,OADAa,QAAQC,IAAId,GAERC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAKH,EAAMK,KAAKE,MACfP,EAAMK,KAAKG,YACZP,EAAAC,EAAAC,cAAA,SAAOY,OAAO,KACVd,EAAAC,EAAAC,cAAA,aAAOF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,kBAAaF,EAAAC,EAAAC,cAAA,yBAAoBF,EAAAC,EAAAC,cAAA,2BAChDF,EAAAC,EAAAC,cAAA,aACCH,EAAMK,KAAKW,MAAMC,IAAI,SAACC,EAAMC,GACzB,OAAOlB,EAAAC,EAAAC,cAACJ,EAAD,CAAaqB,IAAKD,EAAGd,KAAMa,SCXlD,IAAMG,EAAS,CAAC,CACZd,KAAQ,SACRC,YAAe,8BACfQ,MAAS,IAEb,CACIT,KAAQ,UACRC,YAAe,qBACfQ,MAAS,IAEb,CACIT,KAAQ,QACRC,YAAe,oBACfQ,MAAS,KAIE,SAASM,IAAW,IAAAC,EACHC,mBAAS,IADNC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACxBK,EADwBH,EAAA,GAChBI,EADgBJ,EAAA,GAuC/B,OAFAK,oBAAU,YAjCU,IAAIC,KACZC,KAAKhB,MACRiB,WAAW,CACRC,IAAK,mBACLC,KAAM,WAETC,KAAK,SAAAC,GAAA,OAAAA,EAAGhC,KACAiC,OAAO,SAAAC,GAAI,OAAIA,EAAKhC,KAAKiC,cAAcC,WAAW,iBAClDC,OAAO,SAAUC,EAAGC,EAAGzB,EAAGjB,GACvB,IAAM2C,EAAUD,EAAErC,KAAKuC,MAAM,KAAK,GAC5BC,EAAW,CAAExC,KAAQqC,EAAErC,KAAMC,YAAeoC,EAAEpC,YAAaF,IAAOsC,EAAEI,SAAUtC,WAAckC,EAAEK,UAAWC,GAAMN,EAAEM,IACjHC,EAAMR,EAAES,KAAK,SAAAjC,GACf,OAAOA,EAAEZ,KAAKiC,gBAAkBK,IAWpC,OATKM,EAAInC,MAAMoC,KAAK,SAAAjC,GAAO,OAAOA,EAAEZ,OAASwC,EAASxC,SAC9C4C,EACAA,EAAInC,MAAMqC,KAAKN,GAEfJ,EAAES,KAAK,SAAAjC,GACH,MAAkB,UAAXA,EAAEZ,OACVS,MAAMqC,KAAKN,IAGfJ,GACRtB,KAEVe,KAAK,SAAA/B,GACFQ,QAAQC,IAAI,cACZD,QAAQC,IAAIT,GACZwB,EAAUxB,MAIS,IAG3BJ,EAAAC,EAAAC,cAAA,WACKyB,EAAOX,IAAI,SAACC,EAAMC,GACf,OAAID,EAAKF,MAAMsC,OAAS,EACbrD,EAAAC,EAAAC,cAACS,EAAD,CAAWQ,IAAKD,EAAGd,KAAMa,IAE7B,MClDRqC,MAXf,WACE,OACEtD,EAAAC,EAAAC,cAAA,OAAKqD,UAAU,OACbvD,EAAAC,EAAAC,cAAA,4CACAF,EAAAC,EAAAC,cAAA,UAAQqD,UAAU,cAChBvD,EAAAC,EAAAC,cAACmB,EAAD,SCEOmC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAzB,KAAAwB,EAAAE,KAAA,UAAqB1B,KAAK,SAAAC,GAAiD,IAA9C0B,EAA8C1B,EAA9C0B,OAAQC,EAAsC3B,EAAtC2B,OAAQC,EAA8B5B,EAA9B4B,OAAQC,EAAsB7B,EAAtB6B,OAAQC,EAAc9B,EAAd8B,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCDDU,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHvE,EAAAC,EAAAC,cAACF,EAAAC,EAAMuE,WAAP,KACExE,EAAAC,EAAAC,cAACuE,EAAD,QAOJjB","file":"static/js/main.eb168fa2.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function RepoDetails(props){\n    return(\n        <tr><td><a href={props.data.url}>{props.data.name}</a></td><td>{props.data.description}</td><td>{(new Date(props.data.lastupdate)).toLocaleDateString()}</td></tr> \n    )\n\n}","import React from \"react\";\nimport RepoDetails from \"./repodetails\";\n\n\n\nexport default function RepoGroup(props){\n    console.log(props)\n    return(\n        <div>\n            <h1>{props.data.name}</h1>\n            {props.data.description}\n            <table border='1'>\n                <thead><tr><th>Name</th><th>Description</th><th>Last Update</th></tr></thead>\n            <tbody>\n            {props.data.repos.map((item, i) =>{ \n                return <RepoDetails key={i} data={item} />\n            })}\n            </tbody>\n            </table>\n        </div>\n    )\n}","import React, { useState, useEffect } from \"react\";\nimport { Octokit } from \"@octokit/rest\";\nimport RepoGroup from \"./repogroup\";\n\nconst groups = [{\n    \"name\": \"GitOps\",\n    \"description\": \"Configure Cyral with GitOps\",\n    \"repos\": []\n},\n{\n    \"name\": \"Sidecar\",\n    \"description\": \"Sidecar Deployment\",\n    \"repos\": []\n},\n{\n    \"name\": \"Other\",\n    \"description\": \"Other quickstarts\",\n    \"repos\": []\n},\n]\n\nexport default function RepoList() {\n    const [Groups, setGroups] = useState([])\n\n    const getData = () => {\n        const octokit = new Octokit();\n        octokit.rest.repos\n            .listForOrg({\n                org: \"cyral-quickstart\",\n                type: \"public\",\n            })\n            .then(({ data }) =>\n                data.filter(repo => repo.name.toLowerCase().startsWith('quickstart-'))\n                    .reduce(function (r, v, i, a) {\n                        const grpName = v.name.split('-')[1]\n                        const repoData = { \"name\": v.name, \"description\": v.description, \"url\": v.html_url, \"lastupdate\": v.pushed_at, \"id\": v.id }\n                        const grp = r.find(i => {\n                            return i.name.toLowerCase() === grpName\n                        })\n                        if (!grp.repos.find(i => { return i.name === repoData.name })) {\n                            if (grp) {\n                                grp.repos.push(repoData)\n                            } else {\n                                r.find(i => {\n                                    return i.name === \"Other\"\n                                }).repos.push(repoData)\n                            }\n                        }\n                        return r;\n                    }, groups)\n            )\n            .then(data => {\n                console.log(\"store data\")\n                console.log(data)\n                setGroups(data)\n            });\n    }\n\n    useEffect(() => { getData() }, [])\n\n    return (\n        <div>\n            {Groups.map((item, i) => {\n                if (item.repos.length > 0) {\n                    return <RepoGroup key={i} data={item} />\n                }\n                return \"\"\n            })}\n        </div>\n    );\n}\n","//import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport RepoList from './components/repolist';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <nav>Cyral Quickstart Repositories</nav>\n      <header className=\"App-header\">\n        <RepoList/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}